library()
install.packages("httr","XML","rvest","magrittr","plyr","stringr")
install.packages("rvest")
install.packages("plyr","dplyr")
install.packages("plyr")
install.packages("leaflet")
install.packages("maps")
install.packages("dplyr")
install.packages("knitr")
install.packages("kernlab")
names(trainSpam)
library(kernlab)
names(trainSpam)
str(spam)
data(spam)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[,1:4]+1)
)
hCluster = hclus(dist(t(trainSpam[,1:55])))
install.packages("ggplot2")
activity <- read.csv("activity.csv")
PA1 <- function(directory) {
setwd(directory)
unzip <- unzip("repdata-data-activity.zip")
activity <- read.csv("activity.csv")
activnona <- subset(activity,!is.na(activity[,1]))
}
PA1("C:/Users/stephen.p.duffy/Documents/GitHub/RepData_PeerAssessment1")
PA1 <- function(directory) {
setwd(directory)
unzip <- unzip("activity.zip")
activity <- read.csv("activity.csv")
activnona <- subset(activity,!is.na(activity[,1]))
}
PA1("C:/Users/stephen.p.duffy/Documents/GitHub/RepData_PeerAssessment1")
rm(maxs,records,spam,testSpam,trainSpam)
activity <- read.csv("activity.csv")
View(activity)
need<-c("dplyr") #needed packages for a job
ins<-installed.packages()[,1] #find out which packages are installed
(Get<-need[which(is.na(match(need,ins)))]) # check if the needed packages are installed
if(length(Get)>0){install.packages(Get)} #install the needed packages if they are not-installed
eval(parse(text=paste("library(",need,")")))#load the needed packages
sumstep <- summarise(group_by(activnona,date),sum(steps))
activnona <- subset(activity,!is.na(activity[,1]))
activnona <- subset(activity,!is.na(activity[,1]))
sumstep <- summarise(group_by(activnona,date),sum(steps))
hist(table(sumsteps[,2]))
hist(table(sumstep[,2]))
View(sumstep)
View(sumstep)
View(sumstep)
hist(table(sumstep[,2]))
table(sumstep[,2]
)
hist(sumstep[,2])
hist(as.numeric(sumstep[,2])
)
hist(as.numeric(sumstep))
k <- table(sumstep[,2])
str(k)
k <- as.numeric(k)
hist(k)
hist(as.numeric(as.character(sumstep[,2])))
k <- as.numeric(as.character(sumstep[,2]))
k <- as.numeric((sumstep[,2])
k <- as.numeric(sumstep[,2])
k <- table(sumstep[,2])
plot(k)
data(islands)
hist(islands)
str(islands)
j <- as.numeric(sumstep[,2])
hist(as.matrix(sumstep[,2]))
hist(as.matrix(sumstep[,2]), breaks = 15, col = "blue1", xlab = "Count of Steps",main = "Histogram: Total Steps")
hist(as.matrix(sumstep[,2]), breaks = 15, col = "blue2", xlab = "Count of Steps",main = "Histogram: Total Steps")
hist(as.matrix(sumstep[,2]), breaks = 15, col = "blue", xlab = "Count of Steps",main = "Histogram: Total Steps")
hist(as.matrix(sumstep[,2]), breaks = 10, col = "blue", xlab = "Counts of Steps",main = "Histogram: Total Steps")
hist(as.matrix(sumstep[,2]), breaks = 10, col = "blue", xlab = "Counts of Steps",main = "Histogram: Total Steps")
hist(as.matrix(sumstep[,2]), breaks = 8, col = "blue", xlab = "Counts of Steps",main = "Histogram: Total Steps")
hist(as.matrix(sumstep[,2]), breaks = 8, xlab = "Counts of Steps",main = "Histogram: Total Steps")
meanmed <- cbind(summarise(group_by(activnona,date),round(mean(steps),digits = 2)),
summarise(group_by(activnona,date),median(steps))[,2])
meanmed
summarise(group_by(activnona,date),median(steps))[,2])
summarise(group_by(activnona,date),median(steps)[,2])
summarise(group_by(activnona,date),median(steps))
summarise(group_by(activnona,date),round(mean(steps),digits = 2))
median(activnona$steps)
View(activnona)
meanmed(names) <- c("Date","Mean Steps","Median Steps")
names(meanmed) <- c("Date","Mean Steps","Median Steps")
View(meanmed)
meanint <- summarise(group_by(activnona,interval),mean(steps))
plot(meanint, type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Mean(Steps)", main = "Average Steps per Interval")
View(meanint)
k <- meanint[max(meanint[,2]),]
k
max(meanint[,2])
which(meanint[,2] == max(meanint[,2]))
meanint_max <- meantint[which(meanint[,2] == max(meanint[,2])),]
meanint_max <- meanint[which(meanint[,2] == max(meanint[,2])),]
View(meanint_max)
meanint[which(meanint[,2] == max(meanint[,2])),]
Max_avg_steps <- meanint[which(meanint[,2] == max(meanint[,2])),]
View(Max_avg_steps)
View(Max_avg_steps)
paste("Max average steps occurs in interval", Max_avg_steps[1,1])
paste("Max average steps occurs in interval", meanint[which(meanint[,2] == max(meanint[,2])),1])
nrow(is.na(activity))
t <- is.na(activity)
sum(is.na(activity))
View(activity)
sum(is.na(activity[,1]))
ave(1:3)
ave(1:4)
attach(warpbreaks)
ave(breaks, wool)
rm(k,t,Max_avg_steps,)
rm(f,fish)
rm(Get)
rm(ins,islands)
rm(need,probs)
f <- activity
x <- activity
rm(f)
x[is.na(x)] = median(x, na.rm=TRUE)
x[,1] <- as.numeric(as.character(x[,1]))
x[is.na(x[,1])] = median(x[,1], na.rm=TRUE)
x[is.na(x)] = median(x, na.rm=TRUE)
x <- as.numeric(as.character(x))
x <- activity
x[,1] <- as.numeric(as.character(x[,1]))
x[is.na(x)] = median(x, na.rm=TRUE)
x[is.na(x)] = median(x[,1], na.rm=TRUE)
View(x)
x <- activity
x[,1] <- as.numeric(as.character(x[,1]))
x[is.na(x)] = mean(x[,1], na.rm=TRUE)
View(x)
y <- x[is.na(x),]
View(y)
y <- is.na(x)
View(y)
x <- activity
y <- is.na(x)
View(y)
y <- x[is.na(x),]
View(y)
View(meanint)
z <- merge(y,meanint, by = "interval")
View(z)
View(y)
z <- merge(y,meanint, by = "interval")[,c(4,3,1)]
a <- rbind(x[!is.na(x),],z)
View(x)
names(z) <- names(x)
a <- rbind(x[!is.na(x),],z)
View(a)
q <- x[!is.na(x),]
a <- arrange(rbind(activnona,z),date,interval)
View(a)
meanint <- summarise(group_by(activnona,interval),round(mean(steps),2))
paste("Max average steps occurs in interval", meanint[which(meanint[,2] == max(meanint[,2])),1])
z <- merge(y,meanint, by = "interval")[,c(4,3,1)]
names(z) <- names(x)
a <- arrange(rbind(activnona,z),date,interval)
z <- merge(activity[is.na(activity),],meanint, by = "interval")[,c(4,3,1)]
View(z)
names(z) <- names(activity)
z <- merge(activity[is.na(activity),],meanint, by = "interval")[,c(4,3,1)]
names(z) <- names(activity)
z <- merge(activity[is.na(activity),],meanint, by = "interval")[,c(4,3,1)]
activ_na_replaced <- arrange(rbind(activnona,z,make.row.names=TRUE),date,interval)
names(z) <- names(activity)
activ_na_replaced <- arrange(rbind(activnona,z,make.row.names=TRUE),date,interval)
rm(x,y,z)
rm(q)
sumstep_rep <- summarise(group_by(activ_na_replaced,date),sum(steps))
View(sumstep_rep)
hist(as.matrix(sumstep_rep[,2]), breaks = 8, xlab = "Counts of Steps",main = "Histogram: Total Steps")
meanmed_rep <- cbind(summarise(group_by(activ_na_replaced,date),round(mean(steps),digits = 2)),
summarise(group_by(activ_na_replaced,date),median(steps)))
names(meanmed_rep) <- c("Date","Mean Steps","Median Steps")
meanmed_rep
View(meanmed_rep)
meanmed_rep <- cbind(summarise(group_by(activ_na_replaced,date),round(mean(steps),digits = 2)),
summarise(group_by(activ_na_replaced,date),median(steps))[,2])
View(meanmed_rep)
names(meanmed_rep) <- c("Date","Mean Steps","Median Steps")
meanmed_rep
names(meanmed_rep) <- c("Date","Mean Steps Rep","Median Steps Rep")
meanmed_compared <- merge(meanmed,meanmed_rep,by = "Date")
View(meanmed_compared)
meanmed_compared <- merge(meanmed,meanmed_rep,by = "Date", all.y = TRUE)
sumsteps <- summarise(group_by(activity,date),sum(steps))
View(sumsteps)
rm(sumsteps)
rm(activnona)
activ_no_na <- subset(activity,!is.na(activity[,1]))
rm(a)
weekdays(.leap.seconds)
View(activ_na_replaced)
r <- weekdays(activ_na_replaced[1:5,2])
r <- weekdays(as.Date(activ_na_replaced[1:5,2]))
View(r)
r <- weekdays(as.Date(activ_na_replaced[,2]))
View(r)
r[2340:2380]
r[1150:1160]
r <- weekdays(as.Date(activ_na_replaced[,2]),abbreviate = TRUE)
r <- ifelse(weekdays(as.Date(activ_na_replaced[,2])) == "Saturday" | "Sunday", "Weekend", "Weekday")
r <- weekdays(as.Date(activ_na_replaced[,2]))
g <- ifelse(r == "Saturday" | "Sunday", "Weekend", "Weekday")
g <- if (r == "Saturday" | "Sunday") {
"Weekend"
} else {
"Weekday"
}
g <- if (r = "Saturday" | "Sunday") {
"Weekend"
} else {
"Weekday"
}
r <- ifelse(weekdays(as.Date(activ_na_replaced[,2])) = 'Saturday' | 'Sunday', "Weekend", "Weekday")
r <- ifelse(weekdays(as.Date(activ_na_replaced[,2])) == 'Saturday' | 'Sunday', "Weekend", "Weekday")
r <- ifelse(as.factor(r) == 'Saturday' | 'Sunday', "Weekend", "Weekday")
g <- if (r == 'Saturday' | 'Sunday') {
"Weekend"
} else {
"Weekday"
}
g <- if (r == 'Saturday') {
"Weekend"
} else {
"Weekday"
}
activ_na_replaced$Day <-  weekdays(as.Date(activ_na_replaced[,2]))
View(activ_na_replaced)
View(activ_na_replaced)
g <- if (activ_na_replaced[,4] == 'Saturday') {
"Weekend"
} else {
"Weekday"
}
g <- if (activ_na_replaced[,4] == 'Saturday' | 'Sunday') {
"Weekend"
} else {
"Weekday"
}
r <- activ_na_replaced[,4]
g <- for (i in activ_na_replaced$Day) {if (i == 'Saturday') {
"Weekend"
} else if (i == 'Sunday') {
"Weekend"
} else
"Weekday"
}
g <- for (i in activ_na_replaced$Day) {if (i == 'Saturday') {
"Weekend"
} else if (i == 'Sunday') {
"Weekend"
} else {
"Weekday"
}
}
g <- as.data.frame(matrix(,1,1))
for (i in activ_na_replaced$Day) {if (i == 'Saturday') {
Day_type <- "Weekend"
} else if (i == 'Sunday') {
Day_type <- "Weekend"
} else {
Day_type <- "Weekday"
}
g <- rbind(g,Day_type)
}
View(g)
g <- as.data.frame(matrix(,0,1))
View(g)
g <- as.data.frame(matrix(,0,1,"Day_type"))
g <- as.data.frame(matrix(,0,1,dimnames = "Day_type"))
g <- as.data.frame(matrix(,0,1,dimnames = list("Day_type"))
)
g <- as.data.frame(matrix(,0,1,dimnames = list(c("Day_type"))))
g <- as.data.frame(matrix(,0,1,dimnames = list(,c("Day_type"))))
g <- as.data.frame(matrix(,0,1,dimnames = list(1,c("Day_type"))))
g <- as.data.frame(matrix(,0,1))
for (i in activ_na_replaced$Day) {if (i == 'Saturday') {
Day_type <- "Weekend"
} else if (i == 'Sunday') {
Day_type <- "Weekend"
} else {
Day_type <- "Weekday"
}
g <- rbind(g,Day_type)
}
View(g)
j <- activ_na_replaced
for (i in activ_na_replaced$Day) {if (i == 'Saturday') {
Day_type <- "Weekend"
} else if (i == 'Sunday') {
Day_type <- "Weekend"
} else {
Day_type <- "Weekday"
}
j <- cbind(j,Day_type)
}
rm(g,j)
j <- activ_na_replaced
for (i in activ_na_replaced$Day) {if (i == 'Saturday') {
Day_type <- "Weekend"
} else if (i == 'Sunday') {
Day_type <- "Weekend"
} else {
Day_type <- "Weekday"
}
j <- rbind(j,Day_type)
}
rm(g,j)
j <- activ_na_replaced
g <- as.data.frame(matrix(,0,1))
data("warpbreaks")
View(warpbreaks)
tapply(warpbreaks$breaks, warpbreaks[,-1], sum)
k <- warpbreaks[,-1]
View(k)
sumstep5 <- tapply(activ_no_na,activ_no_na$Date,sum)
sumstep5 <- tapply(activ_no_na$steps,activ_no_na$Date,sum)
View(activ_no_na)
sumstep5 <- tapply(activ_no_na$steps,activ_no_na$date,sum)
tapply(warpbreaks$breaks, warpbreaks[, 3, drop = FALSE], sum)
tapply(activ_no_na$steps,activ_no_na$Date,sum)
tapply(activ_no_na$steps,activ_no_na$date,sum)
as.data.frame(sumstep5)
activ_no_na <- subset(activity,!is.na(activity[,1]))
tapply(activ_no_na$steps,activ_no_na$date,sum)
View(activ_no_na)
sumstep5 <- as.matrix(tapply(activ_no_na$steps,activ_no_na$date,sum))
View(sumstep5)
sumstep5 <- as.data.frame(tapply(activ_no_na$steps,activ_no_na$date,sum))
View(sumstep5)
View(sumstep5)
View(j)
for (i in j[,4]) {if (i == 'Saturday') {
j$Day_type <- "Weekend"
} else if (i == 'Sunday') {
j$Day_type <- "Weekend"
} else {
j$Day_type <- "Weekday"
}
}
View(j)
j <- activ_na_replaced
for (i in j[,4]) {if (i == "Saturday") {
j$Day_type <- "Weekend"
} else if (i == "Sunday") {
j$Day_type <- "Weekend"
} else {
j$Day_type <- "Weekday"
}
}
j <- activ_na_replaced
for (i in j[,4]) {if (i = "Saturday") {
j$Day_type <- "Weekend"
} else if (i = "Sunday") {
j$Day_type <- "Weekend"
} else {
j$Day_type <- "Weekday"
}
}
View(j)
j <- activ_na_replaced
j$Day_type <- sapply(j[,4], switch,
Saturday = 'Weekend',
Sunday = 'Weekend',
Monday = 'Weekday',
Tuesday = 'Weekday',
Wednesday = 'Weekday',
Thursday = 'Weekday',
Friday = 'Weekday')
View(j)
j <- activ_na_replaced
j[,4] <- sapply(j[,4], switch,
Saturday = 'Weekend',
Sunday = 'Weekend',
Monday = 'Weekday',
Tuesday = 'Weekday',
Wednesday = 'Weekday',
Thursday = 'Weekday',
Friday = 'Weekday')
View(j)
activ_na_replaced <- arrange(rbind(activ_no_na,activ_na),date,interval)
activ_na <- merge(activity[is.na(activity),],meanint, by = "interval")[,c(4,3,1)]
names(activ_na) <- names(activity) ##update names to facilitate rbind
activ_na_replaced <- arrange(rbind(activ_no_na,activ_na),date,interval)
View(activ_na_replaced)
activ_na_replaced$Day_type <-  weekdays(as.Date(activ_na_replaced[,2]))
activ_na_replaced[,4] <- sapply(activ_na_replaced[,4], switch,
Saturday = 'Weekend',
Sunday = 'Weekend',
Monday = 'Weekday',
Tuesday = 'Weekday',
Wednesday = 'Weekday',
Thursday = 'Weekday',
Friday = 'Weekday')
View(activ_na_replaced)
rm(g,j,k)
View(activ_na_replaced)
View(activ_na_replaced)
g <- tapply(active_na_replaced$steps,active_na_replaced[,3:4] ,mean)
g <- tapply(activ_na_replaced$steps,active_na_replaced[,3:4] ,mean)
g <- tapply(activ_na_replaced$steps,activ_na_replaced[,3:4] ,mean)
View(g)
plot(g, type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
View(g)
g <- as.data.frame(tapply(activ_na_replaced$steps,activ_na_replaced[,3:4] ,mean))
View(g)
plot(g, type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
g <-tapply(activ_na_replaced$steps,activ_na_replaced[,3:4] ,mean)
View(g)
g <- as.data.frame(tapply(activ_na_replaced$steps,activ_na_replaced[,3:4] ,mean))
g$interval <- rownames(g)
View(g)
g <- as.data.frame(as.matrix(tapply(activ_na_replaced$steps,activ_na_replaced[,3:4] ,mean)))
View(g)
g <- as.data.frame(tapply(activ_na_replaced$steps,activ_na_replaced[,3:4] ,mean))
g$interval <- rownames(g)
View(meanint)
View(g)
plot(g[,3],g[,1], type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
plot(g[,3],g[,1], type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
plot(g[,2],g[,1], type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
plot(g[,2],g[,1], type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
plot(g[,3],g[,2], type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
plot(g[,3],g[,2], type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
plot(g[,3],g[,1], type = "l", col = "blue", lwd = 2, xlab = "Interval", ylab = "Number of Steps", main = "Average Steps per Interval")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("colorspace")
library(ggplot2)
qplot(activ_na_replaced$interval, activ_na_replaced$steps, data = activ_na_replaced, facets = . ~ Day_type, geom =
c("point", "smooth"), method = "lm”)
)
qplot(activ_na_replaced$interval, activ_na_replaced$steps, data = activ_na_replaced, facets = . ~ Day_type, geom =
c("point", "smooth"), method = "lm”)
qplot(activ_na_replaced$interval, activ_na_replaced$steps, data = activ_na_replaced, facets = Day_type ~ ., geom =
c("point", "smooth"), method = "lm”)
qplot(activ_na_replaced$interval, activ_na_replaced$steps, data = activ_na_replaced, facets = Day_type ~ ., geom =
c("line"))
qplot(activ_na_replaced$interval, activ_na_replaced$steps, data = activ_na_replaced, facets = Day_type ~ ., geom =
c("line","smooth"))
qplot(activ_na_replaced$interval, activ_na_replaced$steps, data = activ_na_replaced, facets = Day_type ~ ., geom =
c("line"))
qplot(interval, steps, data = activ_na_replaced, facets = Day_type ~ ., geom =
c("line"))
qplot(interval, steps, data = activ_na_replaced, facets = Day_type ~ ., geom =
c("line"), xlab = "Interval", ylab = "Number of Steps", main = "Avg Steps by Interval: Weekend v Weekday")
PA1 <- function(directory) {
setwd(directory)
activity <- read.csv("activity.csv")
activ_no_na <- subset(activity,!is.na(activity[,1]))
}
load_data <- function(directory) {
setwd(directory)
activity <- read.csv("activity.csv")
activ_no_na <- subset(activity,!is.na(activity[,1]))
}
getwd()
load_data("C:/Users/stephen.p.duffy/Documents/GitHub/RepData_PeerAssessment1")
load_data(getwd())
load_data <- function(directory) {
#setwd(directory)
unzip <- unzip("activity.zip")
activity <- read.csv("activity.csv")
activ_no_na <- subset(activity,!is.na(activity[,1]))
}
load_data(getwd())
unzip <- unzip("activity.zip")
activity <- read.csv("activity.csv")
activ_no_na <- subset(activity,!is.na(activity[,1]))
need<-c("dplyr","ggplot2") #needed packages for a job
ins<-installed.packages()[,1] #find out which packages are installed
(Get<-need[which(is.na(match(need,ins)))]) # check if the needed packages are installed
if(length(Get)>0){install.packages(Get)} #install the needed packages if they are not-installed
eval(parse(text=paste("library(",need,")")))#load the needed packages
rm(need,Get)
sumstep <- summarise(group_by(activ_no_na,date),sum(steps))
hist(as.matrix(sumstep[,2]), breaks = 8, xlab = "Counts of Steps",main = "Histogram: Total Steps")
View(activ_no_na)
Loads needed data and removes NA values
read.csv("activity.csv")
getwd()
